# Configure and deploy the worker setup
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  labels:
    app: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
        - name: echo
          image: l7mp/net-debug:0.5.3
          command: ["/usr/bin/socat"]
          args: 
            - -d
            - -d
            - udp-l:9999,fork,reuseaddr
            - "exec:'/usr/bin/perl -e \"$|=1;while(sysread(STDIN, $c, 1)){$_.=$c; if($c eq qq(\n)){print qq(Echo on $ENV{POD_NAME}: \n$_); $_=qq()}}\"'"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - containerPort: 9999
              protocol: UDP
        - name: sidecar
          image: l7mp/l7mp:latest
          imagePullPolicy: IfNotPresent
          command: ["node"]
          args:
            - l7mp-proxy.js
            - -c
            - config/worker-sidecar.yaml
            - -s
            - -l
            - info
          volumeMounts:
            - name: config
              mountPath: /app/config
          ports:
            - containerPort: 9999
              protocol: UDP
      volumes:
        - name: config
          configMap:
            name: worker-sidecar-config
---
# Configmap for l7mp-sidecar
apiVersion: v1
kind: ConfigMap
metadata:
  name: worker-sidecar-config
data:
  worker-sidecar.yaml: |
    admin:
      log_level: info
      log_file: stdout
      access_log_path: /tmp/admin_access.log
    listeners:
      - name: controller-listener
        spec: { protocol: HTTP, port: 1234 }
        rules:
          - action:
              route:
                destination:
                  name: l7mp-controller
                  spec: { protocol: L7mpController }